---
title: "Lab-10"
author:
  - name: Chris Drew
    email: "cdrew02@colostate.edu"
format:
  html:
    self-contained: true
execute:
  echo: true
---

```{r}
# Spatial data science
library(tidyverse)
library(sf)
library(units)

# Data
library(AOI)

# Visualization
library(gghighlight)
library(ggrepel)
library(knitr)
library(flextable)
eqdc <- '+proj=eqdc +lat_0=40 +lon_0=-96 +lat_1=20 +lat_2=60 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs'

states <- AOI::aoi_get(state = "conus") %>%
  st_transform(crs = eqdc)
countries <- aoi_get(country = c("USA", "MX", "CA")) %>%
  st_transform(crs = eqdc)
cities_raw <- read_csv("data/uscities.csv")

cities <- cities_raw %>%
  filter(state_id %in% states$state_abbr) %>%
  st_as_sf(coords = c("lng", "lat"), crs = 4326) %>%
  st_transform(crs = eqdc)
usa_border <- states %>%
  st_union() %>%
  st_cast("MULTILINESTRING")

cities$dist_usa_border_km <- st_distance(cities, usa_border) %>%
  apply(1, min) %>%       # get minimum distance for each city
  set_units("km") %>%
  drop_units()


top5_usa_border <- cities %>%
  arrange(desc(dist_usa_border_km)) %>%
  slice(1:5) %>%
  select(city, state_id, dist_usa_border_km) %>%
  flextable()
state_borders <- states %>%
  st_combine() %>%
  st_cast("MULTILINESTRING")

cities$dist_state_border_km <- st_distance(cities, state_borders) %>%
  apply(1, min) %>%
  set_units("km") %>%
  drop_units()


top5_state_border <- cities %>%
  arrange(desc(dist_state_border_km)) %>%
  slice(1:5) %>%
  select(city, state_id, dist_state_border_km) %>%
  flextable()
mexico <- countries %>%
  filter(admin == "Mexico") %>%
  st_cast("MULTILINESTRING")
#  distance to USA border
cities$dist_usa_border_km <- st_distance(cities, usa_border) %>%
  apply(1, min) %>%
  set_units("km") %>%
  drop_units()

# distance to state borders
cities$dist_state_border_km <- st_distance(cities, state_borders) %>%
  apply(1, min) %>%
  set_units("km") %>%
  drop_units()

# distance to Mexico
cities$dist_mexico_km <- st_distance(cities, mexico) %>%
  apply(1, min) %>%
  set_units("km") %>%
  drop_units()

top5_mexico <- cities %>%
  arrange(desc(dist_mexico_km)) %>%
  slice(1:5) %>%
  select(city, state_id, dist_mexico_km) %>%
  flextable()

# Canada border geometry and distance
canada <- countries %>%
  filter(admin == "Canada") %>%
  st_cast("MULTILINESTRING")

cities$dist_canada_km <- st_distance(cities, canada) %>%
  apply(1, min) %>%
  set_units("km") %>%
  drop_units()

top5_canada <- cities %>%
  arrange(desc(dist_canada_km)) %>%
  slice(1:5) %>%
  select(city, state_id, dist_canada_km) %>%
  flextable()

# Top 10 most populated cities and map
ggplot() +
  geom_sf(data = countries, fill = "gray90") +
  geom_sf(data = states, fill = NA, color = "black") +
  geom_sf(data = cities %>% top_n(10, population), aes(size = population), color = "red") +
  geom_label_repel(data = cities %>% top_n(10, population), aes(geometry = geometry, label = city), stat = "sf_coordinates") +
  theme_minimal()

# Cities farthest from USA border
top_cities_border <- cities %>%
  arrange(desc(dist_usa_border_km)) %>%
  slice(1:5)

ggplot() +
  geom_sf(data = states) +
  geom_sf(data = cities, aes(color = dist_usa_border_km)) +
  scale_color_viridis_c(option = "plasma") +
  geom_label_repel(data = top_cities_border, aes(geometry = geometry, label = city), stat = "sf_coordinates") +
  theme_minimal()

# Cities farthest from state borders
top_cities_state <- cities %>%
  arrange(desc(dist_state_border_km)) %>%
  slice(1:5)

ggplot() +
  geom_sf(data = states) +
  geom_sf(data = cities, aes(color = dist_state_border_km)) +
  scale_color_viridis_c(option = "cividis") +
  geom_label_repel(data = top_cities_state, aes(geometry = geometry, label = city), stat = "sf_coordinates") +
  theme_minimal()

# Cities nearly equidistant to Mexico and Canada
cities <- cities %>%
  mutate(abs_diff_mex_can = abs(dist_mexico_km - dist_canada_km))

equidist <- cities %>%
  filter(abs_diff_mex_can <= 100)

ggplot() +
  geom_sf(data = states, fill = NA) +
  geom_sf(data = equidist, aes(color = abs_diff_mex_can)) +
  gghighlight(abs_diff_mex_can <= 100) +
  geom_label_repel(data = equidist %>% top_n(5, population), aes(geometry = geometry, label = city), stat = "sf_coordinates") +
  theme_minimal()

# Border zone analysis
cities <- cities %>%
  mutate(in_border_zone = dist_usa_border_km <= 160)
border_zone_summary <- cities %>%
  summarize(
    num_cities = sum(in_border_zone),
    pop_in_zone = sum(population[in_border_zone]),
    total_pop = sum(population),
    pct_in_zone = 100 * pop_in_zone / total_pop
  ) %>%
  st_drop_geometry() %>%
  pivot_longer(everything()) %>%
  flextable()


zone_top10 <- cities %>%
  filter(in_border_zone) %>%
  top_n(10, population)

ggplot() +
  geom_sf(data = states) +
  geom_sf(data = cities %>% filter(in_border_zone), aes(color = population)) +
  scale_color_gradient(low = "orange", high = "darkred") +
  geom_label_repel(data = zone_top10, aes(geometry = geometry, label = city), stat = "sf_coordinates") +
  theme_minimal()

# Top city in each state within border zone
top_in_each_state <- cities %>%
  filter(in_border_zone) %>%
  group_by(state_id) %>%
  slice_max(population, n = 1)

ggplot() +
  geom_sf(data = states) +
  geom_sf(data = cities %>% filter(in_border_zone), aes(color = population)) +
  scale_color_gradient(low = "orange", high = "darkred") +
  geom_label_repel(data = top_in_each_state, aes(geometry = geometry, label = city), stat = "sf_coordinates") +
  theme_minimal()


```

